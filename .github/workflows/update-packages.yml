name: Check and Update All Packages

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 UTC every day
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm ci

      - name: Check for updates and create PRs
        run: |
          # Function to create a PR for a package update
          create_pr() {
            local package_name=$1
            local new_version=$2
            
            # Create a new branch
            git checkout -b "dependency-update/${package_name}"
            
            # Update the package
            npm install --package-lock-only "${package_name}@${new_version}"
            
            # Commit the changes
            git config user.name "GitHub Action"
            git config user.email "action@github.com"
            git add package.json package-lock.json
            git commit -m "Bump ${package_name} to version ${new_version}"
            
            # Push the changes
            git push origin "dependency-update/${package_name}"
            
            # Create the pull request
            gh pr create --title "Update ${package_name} to version ${new_version}" \
                         --body "This PR updates ${package_name} to version ${new_version}.\n\nAutomated tests will be run. If they pass, this PR will be automatically merged." \
                         --label "automated pr,dependency update" \
                         --base main
            
            # Switch back to main branch
            git checkout main
          }
          
          # Get all dependencies
          deps=$(npm ls --depth=0 --json | jq -r '.dependencies | keys[]')
          
          for package in $deps; do
            echo "Checking $package..."
            current_version=$(npm ls $package --depth=0 --json | jq -r ".dependencies[\"$package\"].version")
            latest_version=$(npm view $package version)
            
            if [ "$current_version" != "$latest_version" ]; then
              echo "$package needs update from $current_version to $latest_version"
              create_pr $package $latest_version
            else
              echo "$package is up to date"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge Pull Requests
        run: |
          prs=$(gh pr list --label "automated pr,dependency update" --json number --jq '.[].number')
          for pr in $prs; do
            echo "Checking PR #$pr"
            status=$(gh pr checks $pr --json conclusion --jq '.[].conclusion')
            if [ "$status" = "success" ]; then
              echo "All checks passed. Merging PR #$pr"
              gh pr merge $pr --squash --auto
            else
              echo "Checks not passed for PR #$pr. Skipping."
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}